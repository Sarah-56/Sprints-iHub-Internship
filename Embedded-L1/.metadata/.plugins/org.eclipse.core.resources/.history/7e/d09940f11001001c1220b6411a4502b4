/*
 ============================================================================
 Name        : XOGame.c
 Author      : Sarah Mohamed
 Version     :
 Copyright   : Your copyright notice
 Description : Hello World in C, Ansi-style
 ============================================================================
 */

#include <stdio.h>
#include <stdlib.h>
#include <conio.h>

char board[3][3] = {{'0', '1', '2'}, {'3', '4', '5'}, {'6', '7', '8'}};

void displayBoard(void);
char checkWin(void);


int main(void) {
	setvbuf(stdout, NULL, _IONBF, 0);
	setvbuf(stderr, NULL, _IONBF, 0);

	displayBoard();
	int player = 1, choice, result;/*1 or 2*/
	char xoro;
	for(int i = 0; i < 9; i++){
		displayBoard();
		player = (player % 2) ? 1 : 2;
		printf("Player %d, enter a number:  ", player);
		scanf("%d", &choice);
		xoro = (player == 1) ? 'X' : 'O';
		if (board[choice] != 'X' || board[choice] != 'O'){
			board[choice] = xoro;
		}
		if(player == 1){
			player++;
		}
		else{
			player--;
		}
	}
	result = checkWin();
	switch(result){
	case 1:
		break;
	case 0:
		break;
	case -1:
		break;
	}
	return 0;
}
void displayBoard(void){
//	printf("X O GAME\n");
//	printf("Player 1 (X) - Player 2 (O)\n");

	int t;

    for(t=0; t<3; t++) {
	  printf(" %c | %c | %c ",board[t][0], board[t][1], board [t][2]);
	  if(t!=2) printf("\n---|---|---\n");
    }
    printf("\n");

//	printf("  %c  |  %c  |  %c \n", board[0], board[1], board[2]);
//
//	printf("_____|_____|_____\n");
//	printf("     |     |     \n");
//
//	printf("  %c  |  %c  |  %c \n", board[3], board[4], board[5]);
//
//	printf("_____|_____|_____\n");
//	printf("     |     |     \n");
//
//	printf("  %c  |  %c  |  %c \n", board[6], board[7], board[8]);
}
char checkWin(void){
	int i;
	/* check rows */
    for(i=0; i<3; i++) {
		if(board[i][0] == board[i][1] && board[i][0] == board[i][2]){
			return board[i][0];
		  }
	}
	/* check columns */
	for(i=0; i<3; i++) {
		if(board[0][i] == board[1][i] && board[0][i] == board[2][i]){
			return board[0][i];
		    }
	}
	/* test diagonals */
	if(board[0][0] == board[1][1] && board[1][1] == board[2][2]){
		 return board[0][0];
	}
	if(board[0][2] == board[1][1] && board[1][1] == board[2][0]){
		return board[0][2];
	}
	return ' ';
}
